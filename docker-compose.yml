version: '3.8'

networks:
  wallet-network:
    driver: bridge

volumes:
  mysql-primary-data:
  mysql-replica-data:
  kafka-data:
  zookeeper-data:
  redis-data:
  prometheus-data:
  grafana-data:

services:
  mysql-primary:
    image: mysql:8.0
    container_name: wallet-mysql-primary
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --log-bin=mysql-bin --server-id=1 --binlog-format=ROW --gtid-mode=ON --enforce-gtid-consistency=ON
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_USER: wallet
      MYSQL_PASSWORD: wallet
      MYSQL_SERVER_ID: 1
      MYSQL_REPLICATION_MODE: master
      MYSQL_REPLICATION_USER: repl
      MYSQL_REPLICATION_PASSWORD: repl
    ports:
      - "3306:3306"
    volumes:
      - mysql-primary-data:/var/lib/mysql
      - ./mysql/primary:/docker-entrypoint-initdb.d
    networks:
      - wallet-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "wallet", "-pwallet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-replica:
    image: mysql:8.0
    container_name: wallet-mysql-replica
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --server-id=2 --read-only=1 --gtid-mode=ON --enforce-gtid-consistency=ON --log-bin=mysql-bin --log-replica-updates=ON
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_SERVER_ID: 2
      MYSQL_REPLICATION_MODE: slave
      MYSQL_REPLICATION_USER: repl
      MYSQL_REPLICATION_PASSWORD: repl
      MYSQL_MASTER_HOST: mysql-primary
      MYSQL_MASTER_PORT: 3306
      MYSQL_MASTER_USER: repl
      MYSQL_MASTER_PASSWORD: repl
    ports:
      - "3307:3306"
    volumes:
      - mysql-replica-data:/var/lib/mysql
      - ./mysql/replica:/docker-entrypoint-initdb.d
    networks:
      - wallet-network
    depends_on:
      mysql-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "wallet", "-pwallet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: wallet-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    networks:
      - wallet-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: wallet-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - wallet-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: wallet-schema-registry
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - wallet-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: wallet-kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: wallet
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - wallet-network

  redis:
    image: redis:7.0-alpine
    container_name: wallet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - wallet-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: wallet-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - wallet-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'

  grafana:
    image: grafana/grafana:10.0.3
    container_name: wallet-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards/wallet-service:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - wallet-network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin