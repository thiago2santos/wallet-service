__  ____  __  _____   ___  __ ____  ______ 
 --/ __ \/ / / / _ | / _ \/ //_/ / / / __/ 
 -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\ \   
--\___\_\____/_/ |_/_/|_/_/|_|\____/___/   
2025-09-03 09:09:51,723 WARN  [io.qua.config] (main) Unrecognized configuration key "quarkus.apicurio.devservices.enabled" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo
2025-09-03 09:09:51,724 WARN  [io.qua.config] (main) Unrecognized configuration key "quarkus.confluent.registry.url" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo
2025-09-03 09:09:51,724 WARN  [io.qua.config] (main) Unrecognized configuration key "quarkus.confluent.registry.auto-register" was provided; it will be ignored; verify that the dependency extension for this configuration is set or that you did not make a typo
Hibernate: 
    select
        table_schema as TABLE_CAT ,
        null as TABLE_SCHEM ,
        table_name as TABLE_NAME ,
        table_type as TABLE_TYPE ,
        null as REMARKS 
    from
        information_schema.tables 
    where
        1 = 1 
        and table_name like ? 
        and table_type in ( ?, ? ) 
Hibernate: 
    select
        table_name as TABLE_NAME,
        column_name as COLUMN_NAME,
        case 
            when data_type = 'bpchar' 
                then 'CHAR' 
            else data_type 
        end as TYPE_NAME,
        null as COLUMN_SIZE,
        null as DECIMAL_DIGITS,
        is_nullable as IS_NULLABLE,
        null as DATA_TYPE 
    from
        information_schema.columns 
    where
        1 = 1 
    order by
        table_catalog,
        table_schema,
        table_name,
        column_name,
        ordinal_position
Hibernate: 
    select
        index_name as INDEX_NAME,
        -1 as TYPE,
        column_name as COLUMN_NAME 
    from
        information_schema.statistics 
    where
        true 
        and table_schema = ? 
        and table_name = ? 
    order by
        index_name,
        seq_in_index
2025-09-03 09:09:53,325 INFO  [io.qua.sch.run.SimpleScheduler] (main) No scheduled business methods found - Simple scheduler will not be started
2025-09-03 09:09:53,454 INFO  [io.sma.rea.mes.kafka] (smallrye-kafka-producer-thread-0) SRMSG18258: Kafka producer kafka-producer-wallet-events, connected to Kafka brokers 'localhost:9092', is configured to write records to 'wallet-events'
2025-09-03 09:09:53,527 INFO  [io.quarkus] (main) wallet-service 1.0.0-SNAPSHOT on JVM (powered by Quarkus 3.8.1) started in 2.044s. Listening on: http://0.0.0.0:8080
2025-09-03 09:09:53,528 INFO  [io.quarkus] (main) Profile prod activated. 
2025-09-03 09:09:53,528 INFO  [io.quarkus] (main) Installed features: [cdi, confluent-registry-avro, hibernate-orm, hibernate-reactive, hibernate-reactive-panache, hibernate-validator, kafka-client, micrometer, reactive-mysql-client, redis-client, resteasy-reactive, resteasy-reactive-jackson, scheduler, smallrye-context-propagation, smallrye-health, smallrye-openapi, smallrye-reactive-messaging, smallrye-reactive-messaging-kafka, swagger-ui, vertx]
2025-09-03 09:10:13,016 DEBUG [com.wal.inf.hea.EventPublishingHealthCheck] (executor-thread-8) Event emitter has pending requests
2025-09-03 09:10:13,017 DEBUG [com.wal.inf.hea.EventPublishingHealthCheck] (executor-thread-8) Event publishing health check passed in 0ms
2025-09-03 09:10:13,018 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-2) CommandBus health check passed - bus is available
2025-09-03 09:10:13,019 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-2) QueryBus health check passed - bus is available
2025-09-03 09:10:13,019 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-2) Wallet service health check passed in 0ms
2025-09-03 09:10:13,035 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-5) Write database health check failed (this may be normal during startup): No current Mutiny.Session found
	- no reactive session was found in the Vert.x context and the context was not marked to open a new session lazily
	- a session is opened automatically for JAX-RS resource methods annotated with an HTTP method (@GET, @POST, etc.); inherited annotations are not taken into account
	- you may need to annotate the business method with @WithSession or @WithTransaction
2025-09-03 09:10:13,035 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-5) Read database health check failed (this may be normal during startup): No current Mutiny.Session found
	- no reactive session was found in the Vert.x context and the context was not marked to open a new session lazily
	- a session is opened automatically for JAX-RS resource methods annotated with an HTTP method (@GET, @POST, etc.); inherited annotations are not taken into account
	- you may need to annotate the business method with @WithSession or @WithTransaction
2025-09-03 09:10:13,035 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-5) Database health check passed in 17ms
2025-09-03 09:10:13,058 DEBUG [com.wal.inf.hea.CacheHealthCheck] (executor-thread-4) Cache health check passed in 41ms
2025-09-03 09:10:18,542 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-7) CommandBus health check passed - bus is available
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-7) QueryBus health check passed - bus is available
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.EventPublishingHealthCheck] (executor-thread-9) Event emitter has pending requests
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-2) Write database health check failed (this may be normal during startup): No current Mutiny.Session found
	- no reactive session was found in the Vert.x context and the context was not marked to open a new session lazily
	- a session is opened automatically for JAX-RS resource methods annotated with an HTTP method (@GET, @POST, etc.); inherited annotations are not taken into account
	- you may need to annotate the business method with @WithSession or @WithTransaction
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.WalletServiceHealthCheck] (executor-thread-7) Wallet service health check passed in 0ms
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.EventPublishingHealthCheck] (executor-thread-9) Event publishing health check passed in 0ms
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-2) Read database health check failed (this may be normal during startup): No current Mutiny.Session found
	- no reactive session was found in the Vert.x context and the context was not marked to open a new session lazily
	- a session is opened automatically for JAX-RS resource methods annotated with an HTTP method (@GET, @POST, etc.); inherited annotations are not taken into account
	- you may need to annotate the business method with @WithSession or @WithTransaction
2025-09-03 09:10:18,543 DEBUG [com.wal.inf.hea.DatabaseHealthCheck] (executor-thread-2) Database health check passed in 0ms
2025-09-03 09:10:18,546 DEBUG [com.wal.inf.hea.CacheHealthCheck] (executor-thread-5) Cache health check passed in 3ms
CommandBusImpl: Initializing with handlers...
CommandBusImpl: Analyzing class: com.wallet.application.handler.TransferFundsCommandHandler
CommandBusImpl: Found command type: TransferFundsCommand
CommandBusImpl: Found handler TransferFundsCommandHandler_ClientProxy for command type: class com.wallet.application.command.TransferFundsCommand
CommandBusImpl: Analyzing class: com.wallet.application.handler.WithdrawFundsCommandHandler
CommandBusImpl: Found command type: WithdrawFundsCommand
CommandBusImpl: Found handler WithdrawFundsCommandHandler_ClientProxy for command type: class com.wallet.application.command.WithdrawFundsCommand
CommandBusImpl: Analyzing class: com.wallet.application.handler.CreateWalletCommandHandler
CommandBusImpl: Found command type: CreateWalletCommand
CommandBusImpl: Found handler CreateWalletCommandHandler_ClientProxy for command type: class com.wallet.application.command.CreateWalletCommand
CommandBusImpl: Analyzing class: com.wallet.application.handler.DepositFundsCommandHandler
CommandBusImpl: Found command type: DepositFundsCommand
CommandBusImpl: Found handler DepositFundsCommandHandler_ClientProxy for command type: class com.wallet.application.command.DepositFundsCommand
CommandBusImpl: Total handlers registered: 4
CommandBusImpl: Dispatching command: CreateWalletCommand
CommandBusImpl: Available handlers: [class com.wallet.application.command.DepositFundsCommand, class com.wallet.application.command.WithdrawFundsCommand, class com.wallet.application.command.TransferFundsCommand, class com.wallet.application.command.CreateWalletCommand]
Hibernate: 
    insert 
    into
        wallets
        (balance, createdAt, status, updatedAt, userId, id) 
    values
        (?, ?, ?, ?, ?, ?)
