name: 🔒 Security Scan

# Disabled for now - keeping it simple
on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]
  # schedule:
  #   # Run security scans daily at 2 AM UTC
  #   - cron: '0 2 * * *'

env:
  JAVA_VERSION: '21'

jobs:
  # 🔒 Comprehensive Security Analysis
  security-scan:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: 🔧 Make Maven Wrapper Executable
      run: chmod +x ./mvnw
    
    - name: 🔒 OWASP Dependency Check
      run: |
        ./mvnw org.owasp:dependency-check-maven:check \
          -DfailBuildOnCVSS=7 \
          -DsuppressionsLocation=owasp-suppressions.xml \
          -Dformats=HTML,JSON,XML
      continue-on-error: true
    
    - name: 📊 Upload OWASP Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: owasp-dependency-check-report
        path: |
          target/dependency-check-report.html
          target/dependency-check-report.json
          target/dependency-check-report.xml
        retention-days: 30
    
    - name: 🔍 Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: 📊 Upload Trivy Results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: 🔍 CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: java
        queries: security-and-quality
    
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    - name: 🔒 Snyk Security Scan
      uses: snyk/actions/maven@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=pom.xml
    
    - name: 📊 Upload Snyk Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif

  # 🔐 Secret Scanning
  secret-scan:
    name: 🔐 Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔐 TruffleHog Secret Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
    
    - name: 🔍 GitLeaks Secret Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 📊 Security Report
  security-report:
    name: 📊 Security Report
    runs-on: ubuntu-latest
    needs: [security-scan, secret-scan]
    if: always()
    
    steps:
    - name: 📊 Generate Security Summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scan Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **OWASP Dependency Check:** ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis:** ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Secret Scanning:** ${{ needs.secret-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Review security findings in the Security tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Check uploaded artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY
        echo "3. Address any high-severity vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.security-scan.result }}" == "failure" || "${{ needs.secret-scan.result }}" == "failure" ]]; then
          echo "⚠️ **Security issues detected!** Please review and address them." >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ **No critical security issues detected.**" >> $GITHUB_STEP_SUMMARY
        fi
