name: üîç PR Quality Check

# Disabled for now - using simplified pr-unit-tests.yml instead
on:
  workflow_dispatch:
  # pull_request:
  #   branches: [ main, develop ]

env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  # üöÄ Fast Quality Check for PRs
  pr-quality-check:
    name: üöÄ Fast PR Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: ‚òï Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: üîß Make Maven Wrapper Executable
      run: chmod +x ./mvnw
    
    - name: üß™ Run Tests
      run: ./mvnw clean test -B
    
    - name: üé® Check Code Style
      run: ./mvnw checkstyle:check -B
    
    - name: üîç PMD Analysis
      run: ./mvnw pmd:check -B
    
    - name: üìä Generate Quality Report
      if: always()
      run: |
        echo "## üìä PR Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Test Results
        if [ -f target/surefire-reports/TEST-*.xml ]; then
          TESTS=$(grep -o 'tests="[0-9]*"' target/surefire-reports/TEST-*.xml | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
          FAILURES=$(grep -o 'failures="[0-9]*"' target/surefire-reports/TEST-*.xml | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
          echo "### üß™ Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests Run:** $TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- **Failures:** $FAILURES" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Checkstyle Results
        if [ -f target/checkstyle-result.xml ]; then
          CHECKSTYLE_ERRORS=$(grep -c '<error' target/checkstyle-result.xml || echo "0")
          echo "### üé® Checkstyle" >> $GITHUB_STEP_SUMMARY
          echo "- **Violations:** $CHECKSTYLE_ERRORS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        # PMD Results
        if [ -f target/pmd.xml ]; then
          PMD_VIOLATIONS=$(grep -c '<violation' target/pmd.xml || echo "0")
          echo "### üîç PMD Analysis" >> $GITHUB_STEP_SUMMARY
          echo "- **Violations:** $PMD_VIOLATIONS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### ‚úÖ Quality Check Complete" >> $GITHUB_STEP_SUMMARY
        echo "All quality checks have been executed. Review the details above." >> $GITHUB_STEP_SUMMARY

  # üß¨ Mutation Testing (only for significant changes)
  mutation-testing:
    name: üß¨ Mutation Testing
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, '[mutation]') || contains(github.event.pull_request.body, 'run mutation tests')
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
    
    - name: ‚òï Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: üß¨ Run Mutation Tests
      run: ./mvnw org.pitest:pitest-maven:mutationCoverage -B
    
    - name: üìä Comment Mutation Results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          try {
            const report = fs.readFileSync('target/pit-reports/index.html', 'utf8');
            const mutationMatch = report.match(/(\d+)% <div class="coverage_bar"><div class="coverage_complete width-\d+"><\/div><div class="coverage_legend">(\d+)\/(\d+)<\/div>/);
            if (mutationMatch) {
              const [, percentage, killed, total] = mutationMatch;
              const body = `## üß¨ Mutation Testing Results
              
              **Mutation Coverage:** ${percentage}% 
              **Mutations Killed:** ${killed}/${total}
              
              ${percentage >= 95 ? '‚úÖ' : percentage >= 80 ? '‚ö†Ô∏è' : '‚ùå'} ${
                percentage >= 95 ? 'Excellent mutation coverage!' : 
                percentage >= 80 ? 'Good mutation coverage, room for improvement.' : 
                'Mutation coverage needs improvement.'
              }
              
              üìä [Download detailed report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
          } catch (error) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üß¨ Mutation Testing Results\n\n‚ùå Could not parse mutation testing results. Check the action logs for details.`
            });
          }
