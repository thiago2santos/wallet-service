# Kubernetes-specific configuration for wallet service
# This profile is used when deploying to Kubernetes

# Database configuration for Kubernetes
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=wallet
quarkus.datasource.password=wallet
quarkus.datasource.reactive.url=mysql://mysql-primary:3306/wallet

# Additional named datasources for Kubernetes
quarkus.datasource.write.db-kind=mysql
quarkus.datasource.write.username=wallet
quarkus.datasource.write.password=wallet
quarkus.datasource.write.reactive.url=mysql://mysql-primary:3306/wallet

quarkus.datasource.read.db-kind=mysql
quarkus.datasource.read.username=wallet
quarkus.datasource.read.password=wallet
quarkus.datasource.read.reactive.url=mysql://mysql-replica:3306/wallet

# Hibernate configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.persistence-unit.name=wallet
quarkus.hibernate-orm.persistence-unit.default=true

# Redis configuration for Kubernetes
quarkus.redis.hosts=redis://redis:6379
quarkus.redis.timeout=10s
quarkus.redis.max-pool-size=20
quarkus.redis.max-pool-waiting=20

# Kafka configuration for Kubernetes
kafka.bootstrap.servers=kafka:9092
kafka.schema.registry.url=http://schema-registry:8081

# Confluent Schema Registry configuration for Kubernetes
quarkus.confluent.registry.url=http://schema-registry:8081
quarkus.confluent.registry.auto-register=true

# Disable Dev Services (we have our own infrastructure)
quarkus.devservices.enabled=false
quarkus.apicurio.devservices.enabled=false

# Event producer configuration (enabled for Kubernetes)
mp.messaging.outgoing.wallet-events.connector=smallrye-kafka
mp.messaging.outgoing.wallet-events.topic=wallet-events
mp.messaging.outgoing.wallet-events.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.wallet-events.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.wallet-events.acks=all
mp.messaging.outgoing.wallet-events.retries=3
mp.messaging.outgoing.wallet-events.delivery.timeout.ms=120000
mp.messaging.outgoing.wallet-events.enable.idempotence=true
mp.messaging.outgoing.wallet-events.transaction.id.prefix=wallet-events-

# Event consumer configuration (enabled for event sourcing)
mp.messaging.incoming.wallet-events-consumer.connector=smallrye-kafka
mp.messaging.incoming.wallet-events-consumer.topic=wallet-events
mp.messaging.incoming.wallet-events-consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.wallet-events-consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.wallet-events-consumer.auto.offset.reset=earliest
mp.messaging.incoming.wallet-events-consumer.enable.auto.commit=false
mp.messaging.incoming.wallet-events-consumer.isolation.level=read_committed
mp.messaging.incoming.wallet-events-consumer.group.id=wallet-service-group
mp.messaging.incoming.wallet-events-consumer.failure-strategy=retry
mp.messaging.incoming.wallet-events-consumer.retry-attempts=3
mp.messaging.incoming.wallet-events-consumer.retry-max-wait=1000

# Snapshot producer configuration (enabled for Kubernetes)
mp.messaging.outgoing.wallet-snapshots.connector=smallrye-kafka
mp.messaging.outgoing.wallet-snapshots.topic=wallet-snapshots
mp.messaging.outgoing.wallet-snapshots.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.wallet-snapshots.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.wallet-snapshots.acks=all
mp.messaging.outgoing.wallet-snapshots.retries=3
mp.messaging.outgoing.wallet-snapshots.enable.idempotence=true

# Snapshot consumer configuration (disabled to avoid channel name conflicts)
# mp.messaging.incoming.wallet-snapshots-consumer.connector=smallrye-kafka
# mp.messaging.incoming.wallet-snapshots-consumer.topic=wallet-snapshots
# mp.messaging.incoming.wallet-snapshots-consumer.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer
# mp.messaging.incoming.wallet-snapshots-consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# mp.messaging.incoming.wallet-snapshots-consumer.auto.offset.reset=earliest
# mp.messaging.incoming.wallet-snapshots-consumer.enable.auto.commit=false

# OpenAPI configuration
quarkus.smallrye-openapi.info-title=Wallet Service API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=A service for managing digital wallets
quarkus.swagger-ui.always-include=true

# Metrics configuration
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.binder.kafka.enabled=true
quarkus.micrometer.binder.redis.enabled=true
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true

# Health check configuration
quarkus.health.extensions.enabled=true
quarkus.health.openapi.included=true

# Logging configuration for Kubernetes
quarkus.log.level=INFO
quarkus.log.category."com.wallet".level=DEBUG
quarkus.log.category."org.apache.kafka".level=WARN
quarkus.log.category."org.hibernate".level=WARN
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Application server configuration
quarkus.http.host=0.0.0.0
quarkus.http.port=8080
