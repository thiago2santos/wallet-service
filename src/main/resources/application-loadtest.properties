# Load Testing Configuration
# Optimized settings for containerized performance testing

# Database configuration - optimized for high throughput
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=wallet
quarkus.datasource.password=wallet
quarkus.datasource.reactive.url=mysql://mysql-loadtest:3306/wallet

# Write datasource (primary)
quarkus.datasource.write.db-kind=mysql
quarkus.datasource.write.username=wallet
quarkus.datasource.write.password=wallet
quarkus.datasource.write.reactive.url=mysql://mysql-loadtest:3306/wallet

# Read datasource (for now same as write, can be replica later)
quarkus.datasource.read.db-kind=mysql
quarkus.datasource.read.username=wallet
quarkus.datasource.read.password=wallet
quarkus.datasource.read.reactive.url=mysql://mysql-loadtest:3306/wallet

# Hibernate configuration - optimized for performance
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.jdbc.statement-batch-size=50
quarkus.hibernate-orm.fetch.batch-size=50

# Redis configuration - optimized for high load
quarkus.redis.hosts=redis://redis-loadtest:6379
quarkus.redis.timeout=5s
quarkus.redis.max-pool-size=50
quarkus.redis.max-pool-waiting=50
quarkus.redis.max-waiting-handlers=100

# Disable Kafka for load testing (focus on core performance)
# kafka.bootstrap.servers=localhost:9092
# kafka.schema.registry.url=http://localhost:8081

# Disable Dev Services
quarkus.devservices.enabled=false

# Disable event sourcing for pure performance testing
# mp.messaging.outgoing.wallet-events.connector=smallrye-kafka

# OpenAPI configuration
quarkus.smallrye-openapi.info-title=Wallet Service API - Load Test
quarkus.smallrye-openapi.info-version=1.0.0-LOADTEST
quarkus.swagger-ui.always-include=true

# Metrics configuration - essential for load testing
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.binder.kafka.enabled=false
quarkus.micrometer.binder.redis.enabled=true
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.vertx.enabled=true

# Health check configuration
quarkus.health.extensions.enabled=true
quarkus.health.openapi.included=true

# Logging configuration - reduced for performance
quarkus.log.level=WARN
quarkus.log.category."com.wallet".level=INFO
quarkus.log.category."org.apache.kafka".level=ERROR
quarkus.log.category."org.hibernate".level=ERROR
quarkus.log.category."io.vertx".level=WARN
quarkus.log.category."io.netty".level=WARN

# Connection pool configurations - OPTIMIZED FOR HIGH LOAD
quarkus.datasource.reactive.max-size=50
quarkus.datasource.reactive.idle-timeout=PT5M
quarkus.datasource.reactive.max-lifetime=PT30M
quarkus.datasource.reactive.acquisition-timeout=PT30S

quarkus.datasource.write.reactive.max-size=50
quarkus.datasource.write.reactive.idle-timeout=PT5M
quarkus.datasource.write.reactive.max-lifetime=PT30M
quarkus.datasource.write.reactive.acquisition-timeout=PT30S

quarkus.datasource.read.reactive.max-size=50
quarkus.datasource.read.reactive.idle-timeout=PT5M
quarkus.datasource.read.reactive.max-lifetime=PT30M
quarkus.datasource.read.reactive.acquisition-timeout=PT30S

# HTTP server optimizations
quarkus.http.io-threads=8
quarkus.http.worker-threads=200
quarkus.http.max-body-size=10M
quarkus.http.body.handle-file-uploads=false
quarkus.http.limits.max-header-size=8192
quarkus.http.limits.max-chunk-size=8192
quarkus.http.read-timeout=30s
quarkus.http.idle-timeout=30s

# Reactive configurations
quarkus.vertx.max-event-loop-execute-time=10s
quarkus.vertx.max-worker-execute-time=60s
quarkus.vertx.worker-pool-size=200
quarkus.vertx.internal-blocking-pool-size=200

# Transaction timeout
quarkus.transaction-manager.default-transaction-timeout=30s

# Security - minimal for load testing
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# Disable unnecessary features for load testing
quarkus.banner.enabled=false
quarkus.console.enabled=false
