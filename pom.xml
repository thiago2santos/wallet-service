<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.wallet</groupId>
  <artifactId>wallet-service</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <repositories>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
  <properties>
    <compiler-plugin.version>3.11.0</compiler-plugin.version>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.8.1</quarkus.platform.version>
    <skipITs>true</skipITs>
    <surefire-plugin.version>3.1.2</surefire-plugin.version>
    <!-- Code Quality Tool Versions -->
    <checkstyle.version>10.12.5</checkstyle.version>
    <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
    <pmd.version>7.0.0-rc4</pmd.version>
    <maven-pmd-plugin.version>3.21.2</maven-pmd-plugin.version>
    <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
    <!-- Mutation Testing -->
    <pitest-maven.version>1.15.3</pitest-maven.version>
    <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- Core Dependencies -->
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>7.5.1</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-confluent-registry-avro</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-redis-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-reactive-panache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-mysql-client</artifactId>
    </dependency>



    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kafka-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>


    <!-- Test Dependencies -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-vertx</artifactId>
      <scope>test</scope>
    </dependency>



    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Quarkus Plugin -->
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Compiler Plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Surefire Plugin -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Failsafe Plugin -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Checkstyle Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
      </plugin>

      <!-- PMD Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <targetJdk>${maven.compiler.release}</targetJdk>
          <printFailingErrors>true</printFailingErrors>
          <failOnViolation>true</failOnViolation>
          <linkXRef>false</linkXRef>
          <rulesets>
            <ruleset>pmd-ruleset.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>

      <!-- Enforcer Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
      </plugin>

      <!-- Avro Plugin -->
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>1.11.3</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/kafka/schemas</sourceDirectory>
              <outputDirectory>${project.build.directory}/generated-sources/avro</outputDirectory>
              <stringType>String</stringType>
              <enableDecimalLogicalType>true</enableDecimalLogicalType>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- PIT Mutation Testing Plugin -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest-maven.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- Target classes for mutation testing - expanded scope -->
          <targetClasses>
            <!-- Commands -->
            <param>com.wallet.application.command.*</param>
            <!-- Command Handlers -->
            <param>com.wallet.application.handler.*</param>
            <!-- Domain Models -->
            <param>com.wallet.domain.model.*</param>
            <!-- Infrastructure Services -->
            <param>com.wallet.infrastructure.outbox.OutboxEventService</param>
            <param>com.wallet.infrastructure.bus.CommandBusImpl</param>
            <param>com.wallet.infrastructure.health.WalletServiceHealthCheck</param>
            <!-- API Layer -->
            <param>com.wallet.api.WalletResource</param>
          </targetClasses>
          <!-- Test classes to run - expanded to include all unit tests -->
          <targetTests>
            <param>com.wallet.application.command.*Test</param>
            <param>com.wallet.application.handler.*Test</param>
            <param>com.wallet.api.*Test</param>
            <!-- Exclude integration tests for faster mutation testing -->
            <!-- <param>com.wallet.integration.*Test</param> -->
          </targetTests>
          <!-- Enhanced mutation operators -->
          <mutators>
            <!-- Default mutators -->
            <mutator>CONDITIONALS_BOUNDARY</mutator>
            <mutator>INCREMENTS</mutator>
            <mutator>INVERT_NEGS</mutator>
            <mutator>MATH</mutator>
            <mutator>NEGATE_CONDITIONALS</mutator>
            <mutator>VOID_METHOD_CALLS</mutator>
            <mutator>EMPTY_RETURNS</mutator>
            <mutator>FALSE_RETURNS</mutator>
            <mutator>TRUE_RETURNS</mutator>
            <mutator>NULL_RETURNS</mutator>
            <mutator>PRIMITIVE_RETURNS</mutator>
            <!-- Additional experimental mutators for more thorough testing -->
            <mutator>REMOVE_CONDITIONALS_EQUAL_IF</mutator>
            <mutator>REMOVE_CONDITIONALS_EQUAL_ELSE</mutator>
            <mutator>REMOVE_CONDITIONALS_ORDER_IF</mutator>
            <mutator>REMOVE_CONDITIONALS_ORDER_ELSE</mutator>
            <mutator>NON_VOID_METHOD_CALLS</mutator>
            <mutator>CONSTRUCTOR_CALLS</mutator>
            <mutator>INLINE_CONSTS</mutator>
            <!-- Experimental mutators for advanced scenarios -->
            <mutator>EXPERIMENTAL_MEMBER_VARIABLE</mutator>
            <mutator>EXPERIMENTAL_SWITCH</mutator>
            <mutator>EXPERIMENTAL_BIG_DECIMAL</mutator>
          </mutators>
          <!-- Output formats -->
          <outputFormats>
            <outputFormat>HTML</outputFormat>
            <outputFormat>XML</outputFormat>
            <outputFormat>CSV</outputFormat>
          </outputFormats>
          <!-- Strict coverage thresholds for high quality -->
          <mutationThreshold>95</mutationThreshold>
          <coverageThreshold>90</coverageThreshold>
          <!-- Timeout settings - increased for more complex mutations -->
          <timeoutConstant>6000</timeoutConstant>
          <timeoutFactor>1.5</timeoutFactor>
          <!-- Exclude classes that shouldn't be mutated -->
          <excludedClasses>
            <param>com.wallet.GreetingResource</param>
            <param>com.wallet.dto.*</param>
            <param>com.wallet.api.request.*</param>
            <param>com.wallet.api.response.*</param>
            <param>com.wallet.core.*</param>
            <!-- Exclude generated classes -->
            <param>*.*_Bean</param>
            <param>*.*_ClientProxy</param>
            <param>*.*_Subclass</param>
            <!-- Exclude configuration classes -->
            <param>com.wallet.config.*</param>
            <!-- Exclude event classes (mostly data holders) -->
            <param>com.wallet.domain.event.*</param>
          </excludedClasses>
          <!-- JVM arguments -->
          <jvmArgs>
            <value>-Xmx2048m</value>
            <value>-Dquarkus.test.profile=test</value>
            <value>-XX:+EnableDynamicAgentLoading</value>
          </jvmArgs>
          <!-- Enable incremental analysis for performance -->
          <withHistory>true</withHistory>
          <!-- Verbose output for detailed analysis -->
          <verbose>true</verbose>
          <!-- Enable full mutation matrix for comprehensive analysis -->
          <fullMutationMatrix>false</fullMutationMatrix>
          <!-- Detect inlined code -->
          <detectInlinedCode>true</detectInlinedCode>
          <!-- Export line coverage -->
          <exportLineCoverage>true</exportLineCoverage>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>